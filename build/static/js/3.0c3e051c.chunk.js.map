{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["module","exports","Section","title","children","className","s","section","section__title","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","getContacts","dispatch","useDispatch","handleInputChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","map","contact","includes","toast","error","contactsOperations","addContact","success","form__label","form__input","type","pattern","required","onChange","form__btn","disabled","Filter","getFilter","filter__label","filter__text","filter__input","contactsActions","changeFilter","target","ContactList","getVisibleContacts","useEffect","fetchContacts","contact__list","id","contact__item","contact__text","contact__btn","onClick","deleteContact","onDeleteContact","ContactsPage"],"mappings":"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","file":"static/js/3.0c3e051c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3mVqb\",\"section__title\":\"Section_section__title__2sGsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1JygS\",\"form__label\":\"ContactForm_form__label__1NsAK\",\"form__input\":\"ContactForm_form__input__3hvPk\",\"form__btn\":\"ContactForm_form__btn__1p4UN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__text\":\"Filter_filter__text__2Keyz\",\"filter__input\":\"Filter_filter__input__22jkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__1uqXG\",\"contact__item\":\"ContactList_contact__item__kytH7\",\"contact__text\":\"ContactList_contact__text__F5tXn\",\"contact__btn\":\"ContactList_contact__btn__29fi7\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.section__title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? toast.error(`${name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact({ name, number }));\r\n\r\n    reset();\r\n    toast.success('Add contact');\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\" disabled={!name}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from 'redux/contacts/index';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      <p className={s.filter__text}>Find contacts by name :</p>\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id =>\r\n    dispatch(\r\n      contactsOperations.deleteContact(id),\r\n      toast.success('Delete contact'),\r\n    );\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.contact__list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact__item} key={id}>\r\n          <p className={s.contact__text}>{name}:</p>\r\n          <p className={s.contact__text}>{number}</p>\r\n          <button\r\n            className={s.contact__btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Section from 'components/Section';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\n\r\nexport default function ContactsPage() {\r\n  const dispatch = useDispatch();\r\n  // const isLoadingContacts = useSelector(contactsSelectors.getLoading);\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n\r\n        {/* {isLoadingContacts && <h1>Загружаем...</h1>} */}\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}